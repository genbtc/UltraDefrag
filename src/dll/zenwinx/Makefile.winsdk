# DON'T EDIT THIS FILE MANUALLY, IT'S BEEN AUTOMATICALLY GENERATED BY THE MKMOD.LUA SCRIPT

OUTPATH = C:\UDefrag\ultradefrag-src\src\bin\amd64
LIBPATH = C:\UDefrag\ultradefrag-src\src\lib\amd64
OBJPATH = C:\UDefrag\ultradefrag-src\src\obj\zenwinx

TARGET = $(OUTPATH)\zenwinx.dll

ALL: $(OUTPATH) $(LIBPATH) $(OBJPATH) $(TARGET)

$(OUTPATH):
	@if not exist $(OUTPATH) mkdir $(OUTPATH)

$(LIBPATH):
	@if not exist $(LIBPATH) mkdir $(LIBPATH)

$(OBJPATH):
	@if not exist $(OBJPATH) mkdir $(OBJPATH)

CFLAGS = /nologo /W3 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "USE_WINSDK" /D "_CRT_SECURE_NO_WARNINGS" /GS- /Gd /Od /D "_CONSOLE" /D "_USRDLL" /D "ZENWINX_EXPORTS"
RCFLAGS = /nologo /l 0x409 /d "NDEBUG"
LDFLAGS = /nologo /incremental:no /nodefaultlib /machine:AMD64 /subsystem:console /entry:"DllMain" /dll /def:zenwinx.def /implib:$(LIBPATH)\zenwinx.lib

LIBS = ntdll.lib

C_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
RC_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
LIB_DIRS = /LIBPATH:$(LIBPATH) /LIBPATH:"$(WXWIDGETS_LIB_PATH)"

CC = cl.exe
CXX = cl.exe
RSC = rc.exe
LD = link.exe

header_files: \
$(UD_ROOT)\include\*.h \
$(UD_ROOT)\dll\zenwinx\*.h 

resource_files: 

prec.pch: prec.h
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yc /c prec.c /Fo$(OBJPATH)\prec-amd64.obj

$(OBJPATH)\dbg-amd64.obj: dbg.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\dbg-amd64.obj /c dbg.c

$(OBJPATH)\entry-amd64.obj: entry.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\entry-amd64.obj /c entry.c

$(OBJPATH)\env-amd64.obj: env.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\env-amd64.obj /c env.c

$(OBJPATH)\event-amd64.obj: event.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\event-amd64.obj /c event.c

$(OBJPATH)\file-amd64.obj: file.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\file-amd64.obj /c file.c

$(OBJPATH)\ftw-amd64.obj: ftw.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\ftw-amd64.obj /c ftw.c

$(OBJPATH)\ftw_ntfs-amd64.obj: ftw_ntfs.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\ftw_ntfs-amd64.obj /c ftw_ntfs.c

$(OBJPATH)\int64-amd64.obj: int64.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\int64-amd64.obj /c int64.c

$(OBJPATH)\keyboard-amd64.obj: keyboard.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\keyboard-amd64.obj /c keyboard.c

$(OBJPATH)\keytrans-amd64.obj: keytrans.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\keytrans-amd64.obj /c keytrans.c

$(OBJPATH)\ldr-amd64.obj: ldr.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\ldr-amd64.obj /c ldr.c

$(OBJPATH)\list-amd64.obj: list.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\list-amd64.obj /c list.c

$(OBJPATH)\lock-amd64.obj: lock.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\lock-amd64.obj /c lock.c

$(OBJPATH)\mem-amd64.obj: mem.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\mem-amd64.obj /c mem.c

$(OBJPATH)\misc-amd64.obj: misc.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\misc-amd64.obj /c misc.c

$(OBJPATH)\mutex-amd64.obj: mutex.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\mutex-amd64.obj /c mutex.c

$(OBJPATH)\path-amd64.obj: path.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\path-amd64.obj /c path.c

$(OBJPATH)\prb-amd64.obj: prb.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\prb-amd64.obj /c prb.c

$(OBJPATH)\privilege-amd64.obj: privilege.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\privilege-amd64.obj /c privilege.c

$(OBJPATH)\reg-amd64.obj: reg.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\reg-amd64.obj /c reg.c

$(OBJPATH)\stdio-amd64.obj: stdio.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\stdio-amd64.obj /c stdio.c

$(OBJPATH)\string-amd64.obj: string.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\string-amd64.obj /c string.c

$(OBJPATH)\thread-amd64.obj: thread.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\thread-amd64.obj /c thread.c

$(OBJPATH)\time-amd64.obj: time.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\time-amd64.obj /c time.c

$(OBJPATH)\utf8-amd64.obj: utf8.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\utf8-amd64.obj /c utf8.c

$(OBJPATH)\volume-amd64.obj: volume.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\volume-amd64.obj /c volume.c

$(OBJPATH)\zenwinx-amd64.obj: zenwinx.c header_files prec.pch
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Yuprec.h /Fo$(OBJPATH)\zenwinx-amd64.obj /c zenwinx.c

$(OBJPATH)\zenwinx-amd64.res: zenwinx.rc header_files resource_files
	@$(RSC) $(RCFLAGS) $(RC_INCLUDE_DIRS) /Fo$(OBJPATH)\zenwinx-amd64.res zenwinx.rc

SRC_OBJS = $(OBJPATH)\dbg-amd64.obj $(OBJPATH)\entry-amd64.obj $(OBJPATH)\env-amd64.obj $(OBJPATH)\event-amd64.obj $(OBJPATH)\file-amd64.obj $(OBJPATH)\ftw-amd64.obj $(OBJPATH)\ftw_ntfs-amd64.obj $(OBJPATH)\int64-amd64.obj $(OBJPATH)\keyboard-amd64.obj $(OBJPATH)\keytrans-amd64.obj $(OBJPATH)\ldr-amd64.obj $(OBJPATH)\list-amd64.obj $(OBJPATH)\lock-amd64.obj $(OBJPATH)\mem-amd64.obj $(OBJPATH)\misc-amd64.obj $(OBJPATH)\mutex-amd64.obj $(OBJPATH)\path-amd64.obj $(OBJPATH)\prb-amd64.obj $(OBJPATH)\privilege-amd64.obj $(OBJPATH)\reg-amd64.obj $(OBJPATH)\stdio-amd64.obj $(OBJPATH)\string-amd64.obj $(OBJPATH)\thread-amd64.obj $(OBJPATH)\time-amd64.obj $(OBJPATH)\utf8-amd64.obj $(OBJPATH)\volume-amd64.obj $(OBJPATH)\zenwinx-amd64.obj

RSRC_OBJS = $(OBJPATH)\zenwinx-amd64.res

EXT_OBJS =

DEF_FILE = zenwinx.def

$(TARGET): $(DEF_FILE) $(SRC_OBJS) $(RSRC_OBJS)
	@$(LD) $(LDFLAGS) /out:$(TARGET) $(SRC_OBJS) $(RSRC_OBJS) $(EXT_OBJS) $(LIB_DIRS) $(LIBS)
