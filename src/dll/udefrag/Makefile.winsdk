# DON'T EDIT THIS FILE MANUALLY, IT'S BEEN AUTOMATICALLY GENERATED BY THE MKMOD.LUA SCRIPT

OUTPATH = C:\UDefrag\ultradefrag-src\src\bin\amd64
LIBPATH = C:\UDefrag\ultradefrag-src\src\lib\amd64
OBJPATH = C:\UDefrag\ultradefrag-src\src\obj\udefrag

TARGET = $(OUTPATH)\udefrag.dll

ALL: $(OUTPATH) $(LIBPATH) $(OBJPATH) $(TARGET)

$(OUTPATH):
	@if not exist $(OUTPATH) mkdir $(OUTPATH)

$(LIBPATH):
	@if not exist $(LIBPATH) mkdir $(LIBPATH)

$(OBJPATH):
	@if not exist $(OBJPATH) mkdir $(OBJPATH)

CFLAGS = /nologo /W3 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "USE_WINSDK" /D "_CRT_SECURE_NO_WARNINGS" /D "ATTACH_DEBUGGER" /GS- /Gd /Od /D "_CONSOLE" /D "_USRDLL" /D "UDEFRAG_EXPORTS"
RCFLAGS = /nologo /l 0x409 /d "NDEBUG"
LDFLAGS = /nologo /incremental:no /nodefaultlib /machine:AMD64 /subsystem:console /entry:"DllMain" /dll /def:udefrag.def /implib:$(LIBPATH)\udefrag.lib

LIBS = ntdll.lib zenwinx.lib

C_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
RC_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
LIB_DIRS = /LIBPATH:$(LIBPATH) /LIBPATH:"$(WXWIDGETS_LIB_PATH)"

CC = cl.exe
CXX = cl.exe
RSC = rc.exe
LD = link.exe

header_files: \
$(UD_ROOT)\include\*.h \
$(UD_ROOT)\dll\udefrag\*.h \
$(UD_ROOT)\dll\zenwinx\*.h 

resource_files: 

$(OBJPATH)\analyze-amd64.obj: analyze.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\analyze-amd64.obj /c analyze.c

$(OBJPATH)\auxiliary-amd64.obj: auxiliary.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\auxiliary-amd64.obj /c auxiliary.c

$(OBJPATH)\defrag-amd64.obj: defrag.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\defrag-amd64.obj /c defrag.c

$(OBJPATH)\entry-amd64.obj: entry.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\entry-amd64.obj /c entry.c

$(OBJPATH)\int64-amd64.obj: int64.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\int64-amd64.obj /c int64.c

$(OBJPATH)\map-amd64.obj: map.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\map-amd64.obj /c map.c

$(OBJPATH)\move-amd64.obj: move.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\move-amd64.obj /c move.c

$(OBJPATH)\optimize-amd64.obj: optimize.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\optimize-amd64.obj /c optimize.c

$(OBJPATH)\options-amd64.obj: options.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\options-amd64.obj /c options.c

$(OBJPATH)\query-amd64.obj: query.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\query-amd64.obj /c query.c

$(OBJPATH)\reports-amd64.obj: reports.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\reports-amd64.obj /c reports.c

$(OBJPATH)\search-amd64.obj: search.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\search-amd64.obj /c search.c

$(OBJPATH)\udefrag-amd64.obj: udefrag.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\udefrag-amd64.obj /c udefrag.c

$(OBJPATH)\volume-amd64.obj: volume.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\volume-amd64.obj /c volume.c

$(OBJPATH)\udefrag-amd64.res: udefrag.rc header_files resource_files
	@$(RSC) $(RCFLAGS) $(RC_INCLUDE_DIRS) /Fo$(OBJPATH)\udefrag-amd64.res udefrag.rc

SRC_OBJS = $(OBJPATH)\analyze-amd64.obj $(OBJPATH)\auxiliary-amd64.obj $(OBJPATH)\defrag-amd64.obj $(OBJPATH)\entry-amd64.obj $(OBJPATH)\int64-amd64.obj $(OBJPATH)\map-amd64.obj $(OBJPATH)\move-amd64.obj $(OBJPATH)\optimize-amd64.obj $(OBJPATH)\options-amd64.obj $(OBJPATH)\query-amd64.obj $(OBJPATH)\reports-amd64.obj $(OBJPATH)\search-amd64.obj $(OBJPATH)\udefrag-amd64.obj $(OBJPATH)\volume-amd64.obj

RSRC_OBJS = $(OBJPATH)\udefrag-amd64.res

EXT_OBJS =

DEF_FILE = udefrag.def

$(TARGET): $(DEF_FILE) $(SRC_OBJS) $(RSRC_OBJS)
	@$(LD) $(LDFLAGS) /out:$(TARGET) $(SRC_OBJS) $(RSRC_OBJS) $(EXT_OBJS) $(LIB_DIRS) $(LIBS)
