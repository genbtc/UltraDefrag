# DON'T EDIT THIS FILE MANUALLY, IT'S BEEN AUTOMATICALLY GENERATED BY THE MKMOD.LUA SCRIPT

OUTPATH = C:\UDefrag\ultradefrag-src\src\bin\amd64
LIBPATH = C:\UDefrag\ultradefrag-src\src\lib\amd64
OBJPATH = C:\UDefrag\ultradefrag-src\src\obj\lua5.1

TARGET = $(OUTPATH)\lua5.1a.dll

ALL: $(OUTPATH) $(LIBPATH) $(OBJPATH) $(TARGET)

$(OUTPATH):
	@if not exist $(OUTPATH) mkdir $(OUTPATH)

$(LIBPATH):
	@if not exist $(LIBPATH) mkdir $(LIBPATH)

$(OBJPATH):
	@if not exist $(OBJPATH) mkdir $(OBJPATH)

CFLAGS = /nologo /W3 /D "WIN32" /D "NDEBUG" /D "_MBCS" /D "USE_WINSDK" /D "_CRT_SECURE_NO_WARNINGS" /GS- /Gd /Od /MT /D "_CONSOLE" /D "_USRDLL" /D "LUA5.1A_EXPORTS"
RCFLAGS = /nologo /l 0x409 /d "NDEBUG"
LDFLAGS = /nologo /incremental:no /machine:AMD64 /subsystem:console /dll /def:lua5.1.def /implib:$(LIBPATH)\lua5.1a.lib

LIBS = kernel32.lib shell32.lib

C_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
RC_INCLUDE_DIRS = /I "$(WXWIDGETS_INC2_PATH)" /I "$(WXWIDGETS_INC_PATH)"
LIB_DIRS = /LIBPATH:$(LIBPATH) /LIBPATH:"$(WXWIDGETS_LIB_PATH)"

CC = cl.exe
CXX = cl.exe
RSC = rc.exe
LD = link.exe

header_files: \
$(UD_ROOT)\include\*.h \
$(UD_ROOT)\lua5.1\*.h 

resource_files: 

$(OBJPATH)\lapi-amd64.obj: lapi.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lapi-amd64.obj /c lapi.c

$(OBJPATH)\lauxlib-amd64.obj: lauxlib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lauxlib-amd64.obj /c lauxlib.c

$(OBJPATH)\lbaselib-amd64.obj: lbaselib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lbaselib-amd64.obj /c lbaselib.c

$(OBJPATH)\lcode-amd64.obj: lcode.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lcode-amd64.obj /c lcode.c

$(OBJPATH)\ldblib-amd64.obj: ldblib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ldblib-amd64.obj /c ldblib.c

$(OBJPATH)\ldebug-amd64.obj: ldebug.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ldebug-amd64.obj /c ldebug.c

$(OBJPATH)\ldo-amd64.obj: ldo.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ldo-amd64.obj /c ldo.c

$(OBJPATH)\ldump-amd64.obj: ldump.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ldump-amd64.obj /c ldump.c

$(OBJPATH)\lfunc-amd64.obj: lfunc.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lfunc-amd64.obj /c lfunc.c

$(OBJPATH)\lgc-amd64.obj: lgc.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lgc-amd64.obj /c lgc.c

$(OBJPATH)\linit-amd64.obj: linit.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\linit-amd64.obj /c linit.c

$(OBJPATH)\liolib-amd64.obj: liolib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\liolib-amd64.obj /c liolib.c

$(OBJPATH)\llex-amd64.obj: llex.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\llex-amd64.obj /c llex.c

$(OBJPATH)\lmathlib-amd64.obj: lmathlib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lmathlib-amd64.obj /c lmathlib.c

$(OBJPATH)\lmem-amd64.obj: lmem.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lmem-amd64.obj /c lmem.c

$(OBJPATH)\loadlib-amd64.obj: loadlib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\loadlib-amd64.obj /c loadlib.c

$(OBJPATH)\lobject-amd64.obj: lobject.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lobject-amd64.obj /c lobject.c

$(OBJPATH)\lopcodes-amd64.obj: lopcodes.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lopcodes-amd64.obj /c lopcodes.c

$(OBJPATH)\loslib-amd64.obj: loslib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\loslib-amd64.obj /c loslib.c

$(OBJPATH)\lparser-amd64.obj: lparser.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lparser-amd64.obj /c lparser.c

$(OBJPATH)\lstate-amd64.obj: lstate.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lstate-amd64.obj /c lstate.c

$(OBJPATH)\lstring-amd64.obj: lstring.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lstring-amd64.obj /c lstring.c

$(OBJPATH)\lstrlib-amd64.obj: lstrlib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lstrlib-amd64.obj /c lstrlib.c

$(OBJPATH)\ltable-amd64.obj: ltable.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ltable-amd64.obj /c ltable.c

$(OBJPATH)\ltablib-amd64.obj: ltablib.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ltablib-amd64.obj /c ltablib.c

$(OBJPATH)\ltm-amd64.obj: ltm.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\ltm-amd64.obj /c ltm.c

$(OBJPATH)\lundump-amd64.obj: lundump.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lundump-amd64.obj /c lundump.c

$(OBJPATH)\lvm-amd64.obj: lvm.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lvm-amd64.obj /c lvm.c

$(OBJPATH)\lzio-amd64.obj: lzio.c header_files
	@$(CC) $(CFLAGS) $(C_INCLUDE_DIRS) /Fo$(OBJPATH)\lzio-amd64.obj /c lzio.c

SRC_OBJS = $(OBJPATH)\lapi-amd64.obj $(OBJPATH)\lauxlib-amd64.obj $(OBJPATH)\lbaselib-amd64.obj $(OBJPATH)\lcode-amd64.obj $(OBJPATH)\ldblib-amd64.obj $(OBJPATH)\ldebug-amd64.obj $(OBJPATH)\ldo-amd64.obj $(OBJPATH)\ldump-amd64.obj $(OBJPATH)\lfunc-amd64.obj $(OBJPATH)\lgc-amd64.obj $(OBJPATH)\linit-amd64.obj $(OBJPATH)\liolib-amd64.obj $(OBJPATH)\llex-amd64.obj $(OBJPATH)\lmathlib-amd64.obj $(OBJPATH)\lmem-amd64.obj $(OBJPATH)\loadlib-amd64.obj $(OBJPATH)\lobject-amd64.obj $(OBJPATH)\lopcodes-amd64.obj $(OBJPATH)\loslib-amd64.obj $(OBJPATH)\lparser-amd64.obj $(OBJPATH)\lstate-amd64.obj $(OBJPATH)\lstring-amd64.obj $(OBJPATH)\lstrlib-amd64.obj $(OBJPATH)\ltable-amd64.obj $(OBJPATH)\ltablib-amd64.obj $(OBJPATH)\ltm-amd64.obj $(OBJPATH)\lundump-amd64.obj $(OBJPATH)\lvm-amd64.obj $(OBJPATH)\lzio-amd64.obj

RSRC_OBJS =

EXT_OBJS =

DEF_FILE = lua5.1.def

$(TARGET): $(DEF_FILE) $(SRC_OBJS) $(RSRC_OBJS)
	@$(LD) $(LDFLAGS) /out:$(TARGET) $(SRC_OBJS) $(RSRC_OBJS) $(EXT_OBJS) $(LIB_DIRS) $(LIBS)
